#Haojing Specific

sftp-config.json
.tags
.tags_sorted_by_file


### Collected by https://github.com/github/gitignore ###


### Archives.gitignore ###
# It's better to unpack these files and commit the raw source because
# git has its own built in compression methods.
*.7z
*.jar
*.rar
*.zip
*.gz
*.bzip
*.bz2
*.xz
*.lzma

#packing-only formats
*.iso
*.tar

#package management formats
*.dmg
*.xpi
*.gem
*.egg
*.deb
*.rpm


### CVS.gitignore ###
/CVS/*
*/CVS/*
.cvsignore
*/.cvsignore

### Eclipse.gitignore ###
*.pydevproject
.project
.metadata
bin/**
tmp/**
tmp/**/*
*.tmp
*.bak
*.swp
*~.nib
local.properties
.classpath
.settings/
.loadpath

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# CDT-specific
.cproject

# PDT-specific
.buildpath


### Emacs.gitignore ###
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
.elc
auto-save-list
tramp
.\#*

# Org-mode
.org-id-locations
*_archive


### Espresso.gitignore ###
*.esproj

### FlexBuilder.gitignore ###
bin/
bin-debug/

### IntelliJ.gitignore ###
*.iml
*.ipr
*.iws
.idea/


### Linux.gitignore ###
.*
!.gitignore
*~


### Matlab.gitignore ###
##---------------------------------------------------
## Remove autosaves generated by the Matlab editor
## We have git for backups!
##---------------------------------------------------

# Windows default autosave extension
*.asv

# OSX / *nix default autosave extension
*.m~

# Compiled MEX binaries (all platforms)
*.mex*

# Simulink Code Generation	
slprj/


### Mercurial.gitignore ###
/.hg/*
*/.hg/*
.hgignore


### ModelSim.gitignore ###
# ignore ModelSim generated files and directories (temp files and so on)
[_@]*

# ignore compilation output of ModelSim
*.mti
*.dat
*.dbs
*.psm
*.bak
*.cmp
*.jpg
*.html
*.bsf

# ignore simulation output of ModelSim
wlf*
*.wlf
*.vstf
*.ucdb
cov*/
transcript*
sc_dpiheader.h
vsim.dbg


### MonoDevelop.gitignore ###
#User Specific
*.userprefs
*.usertasks

#Mono Project Files
*.pidb
*.resources
test-results/


### NetBeans.gitignore ###
nbproject/private/
build/
nbbuild/
dist/
nbdist/
nbactions.xml
nb-configuration.xml


### OSX.gitignore ###
.DS_Store
.AppleDouble
.LSOverride
Icon


# Thumbnails
._*

# Files that might appear on external disk
.Spotlight-V100
.Trashes


### PhPStorm.gitignore ###
.idea/
.idea/codeStyleSettings.xml

### Quartus2.gitignore ###
# Working with Altera Quartus II (Q2) and do proper versioning is not that easy
# but if you follow some rules it can be accomplished. :)
# This file should be placed into the main directory where the .qpf file is
# found. Generally Q2 throws all entities and so on in the main directory, but
# you can place all stuff also in separate folders. This approach is followed
# here. So when you create a new design create one or more folders where your
# entities will be located and put a .gitignore in there that overrides the
# ignores of this file, e.g. one single rule stating "!*" which allows now all
# type of files. When you add a MegaFunction or another entity to your design,
# simply add it to one of your private folders and Q2 will be happy and manage
# everything quite good. When you want to do versioning of your generated
# SOF/POF files, you can do this by redirecting the generated output to an own
# folder. To do this go to:
# "Assignments"
#   -> "Settings
#      -> "Compilation Process Settings"
#         -> "Save project output files in specified directory"
# Now you can either place a .gitignore in the directory and allow the following
# list of types:
#   !*.sof
#   !*.pof
# or you create an own submodule in the folder to keep binary files out of your
# design.

# ignore hdl source files in top level directory
*.vhd
*.v

# ignore Quartus II generated files
*sopc_*
*.jdi
*.ptf.*
*.sof
*.pof
*.qws
*.smsg
*_inst.vhd
*_generation_script*
*.done
*.txt
*.qarlog
*.rpt
*.summary
*.qws
*.cmp
*.eqn
*.html
*.jpg
*.bak
*.qar
*.sopc_builder
*example*
*~
*.sdc
*.tcl
*.pin
*.mif
*.hex

# ignore Quartus II generated folders
db/
incremental_db/
simulation/
timing/
testbench/
*_sim/


### README.md ###
## Globally Useful gitignores

This directory contains globally useful gitignores,
e.g. OS-specific and editor specific.

For more on global gitignores:
<http://help.github.com/git-ignore/>

And a good blog post about 'em:
<http://augustl.com/blog/2009/global_gitignores>


### Redcar.gitignore ###
.redcar


### RubyMine.gitignore ###
.idea/workspace.xml


### SASS.gitignore ###
### SASS Ignores - "Sassy CSS" http://sass-lang.com/
*.sass-cache


### SBT.gitignore ###
# SBT .gitignore
# recommended: http://code.google.com/p/simple-build-tool/wiki/Setup#Version_Control

target/
lib_managed/
src_managed/
project/boot/

### SVN.gitignore ###
.svn/


### SublimeText.gitignore ###
# SublimeText project files
/*.sublime-project
*.sublime-workspace


### Tags.gitignore ###
# Ignore tags created by etags and ctags
TAGS
!TAGS/
tags
!tags/


### TextMate.gitignore ###
*.tmproj
*.tmproject
tmtags


### VisualStudio.gitignore ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.sln.docstates

# Build results

[Dd]ebug*/
[Rr]elease/

build/


[Tt]est[Rr]esult
[Bb]uild[Ll]og.*

*_i.c
*_p.c
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.vspscc
*.vssscc
.builds

*.pidb

*.log
*.scc
# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf

# Visual Studio profiler
*.psess
*.vsp

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/

*.[Rr]e[Ss]harper

# NCrunch
*.ncrunch*
.*crunch*.local.xml

# Installshield output folder
[Ee]xpress

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish

# Publish Web Output
*.Publish.xml

# Others
[Bb]in
[Oo]bj
sql
TestResults
[Tt]est[Rr]esult*
*.Cache
ClientBin
[Ss]tyle[Cc]op.*
~$*
*.dbmdl

*.[Pp]ublish.xml

Generated_Code #added for RIA/Silverlight projects

# Backup & report files from converting an old project file to a newer
# Visual Studio version. Backup files are not needed, because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML

# NuGet
packages/


### Windows.gitignore ###
# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/


### XilinxISE.gitignore ###
# intermediate build files
*.bgn
*.bit
*.bld
*.cmd_log
*.drc
*.ll
*.lso
*.msd
*.msk
*.ncd
*.ngc
*.ngd
*.ngr
*.pad
*.par
*.pcf
*.prj
*.ptwx
*.rbb
*.rbd
*.stx
*.syr
*.twr
*.twx
*.unroutes
*.ut
*.xpi
*.xst
*_bitgen.xwbt
*_envsettings.html
*_map.map
*_map.mrp
*_map.ngm
*_map.xrpt
*_ngdbuild.xrpt
*_pad.csv
*_pad.txt
*_par.xrpt
*_summary.html
*_summary.xml
*_usage.xml
*_xst.xrpt

# project-wide generated files
*.gise
par_usage_statistics.html
usage_statistics_webtalk.html
webtalk.log
webtalk_pn.xml

# generated folders
iseconfig/
xlnx_auto_0_xdb/
xst/
_ngo/
_xmsgs/


### vim.gitignore ###
.*.sw[a-z]
*.un~
Session.vim
.netrwhist
